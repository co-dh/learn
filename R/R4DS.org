
* Exploratory Data Analysis
  #+begin_src R
    library(ggplot2)
    library(tidyverse)
  #+end_src
** distribution of carat with histogram
ggplot(data=diamonds, mapping=aes(x=carat))+geom_histogram(binwidth=0.1)

** freqpoly for multiple variables.
ggplot(data=diamonds, mapping=aes(x=carat,color=cut))+geom_freqpoly(binwidth=0.1)

** curiosity and skepticism
   
** Typical values
   + Which values are the most common? Why?
   + Which values are rare? Why? Does that match your expectation?
   + Can you see any unusual patterns? Why?
    
** Outliers

   Focus on y. xlim() throw away(replaced with NA) data outsize the limit. Bad. Avoid.
   
   #+begin_src R
     ggplot(diamonds) +geom_histogram(mapping = aes(x = y), binwidth = 0.5) +
       coord_cartesian(ylim = c(0, 50))
   #+end_src

diamonds %>% filter(x<3|y>20) %>% select(price, x,y,z) %>% arrange(y)
geom_point(na.rm=TRUE) # remove NA

* Covariation
** Categorical + Continuous
   density: count standardised: area of each frequency polygon is 1
   lowest quality cut have the highest average price.
   #+begin_src R
     ggplot(data=diamonds, mapping=aes(x=price,y=..density..)) +
       geom_freqpoly(mapping=aes(color=cut),binwidth=500)
   #+end_src

*** boxplot:
   + a box from 25th percentile to 75th. (IQR: Interquartile Range)
   + a median line
   + outlier (1.5XIQR) as points
   + whisker: extends of farthest non-outlier points

   #+begin_src R
   ggplot(data=diamonds, mapping=aes(x=cut,y=price))+geom_boxplot()
   #+end_src

   aes(x=reorder(class, hwy,FUN=median)
   
** Categorical + Categorical
   #+begin_src R
   ggplot(data=diamonds, mapping=aes(color,cut)) + geom_count()
   #+end_src

   diamonds %>% count(color, cut) %>% ggplot(mapping=aes(color,cut))+geom_tile(mapping=aes(fill=n))

** Continuous + Continuous
   #+begin_src R
     dia<-ggplot(diamonds%>% filter(carat<3), aes(carat, price))
     dia + geom_point(alpha=0.01)
     dia+geom_bin2d()
     dia+geom_boxplot(mapping=aes(group=cut_width(carat, 0.1)))
     dia+geom_boxplot(mapping=aes(group=cut_number(carat, 20)))
     ggplot(diamonds%>%filter(carat<3),aes(price,carat))+geom_boxplot(mapping=aes(group=cut_width(price,1000)))
     ggplot(diamonds,aes(carat,price))+geom_boxplot(aes(group=cut_width(carat,1)))
     #+end_src

* Patterns and models
  #+begin_src R
    library(modelr)
    library(tidyverse)
    mod<-lm(log(price)~log(carat), data=diamonds)
    diamonds %>% add_residuals(mod)%>% mutate(resid=exp(resid))%>%ggplot()+geom_point(aes(carat,resid))

    ggplot(data=d2)+geom_boxplot(mapping=aes(cut, resid))

  #+end_src

  #+RESULTS:

* Embeded R

  #+begin_src q
    setenv[`R_HOME;] first system "sh R RHOME"
    \l rinit.q
    Rcmd "library(tidyverse)"
    Rget "diamonds"
    Rcmd "a<-ggplot(data=diamonds, mapping=aes(color,cut))+geom_point()"
    Rcmd "print(a)"
    Roff[]
  #+end_src

  
* Projects
  #+begin_src R
   getwd()

  #+end_src

* Tibbles
  
  Slower than data.table and Q. any need to learn?
  #+begin_src R
        tibble(r=rnorm(1000),`fo bar`=1) %>% ggplot(aes(r))+geom_histogram(binwidth=0.01)

        tribble(
             ~x,~y, ~z,
            #-|--|---
            "a", 2, 3.6,
            "b", 1, 8.5
        )
       print(tibble, n=10, width=Inf)
       options(tibble.print_max=n, tibble.print_min=m)
       options(tibble.width=Inf)
    #+end_src
  Weird column name are back quoted like `:)`.

  + Tibble only print first 10 rows, and all columns to fit screen.
  + subsetting
  + never do partial matching
  #+begin_src R
    df<-tibble(x=runif(5), y=rnorm(5))
    df$x
    df[['x']]
    df[[1]]
    df %>% .$x
    df %>% .[[1]]
    class(as.data.frame(df))

  #+end_src

* Model
  The goal of modeling is to provide a simple low-dimensional summary of a dataset.
  Model should capture "signal"(patterns generated by the phenomenon of interest),
  and ignore "noise"(random variation not interested).
  + Predicative model. (supervised)
  + Data discovery model. ( unsupervised)

** Hypothesis generation vs confirmation
   + Each observation can only be used for hypothesis generation or confirmation, but not both.
   + An observation can only be used for confirmation once.
   + Split data into 3
     1. 60% Training. Explore
     2. 20% Query. Verify hypotheses. Do not include in any automated process.
     3. 20% Test.  Use only ONCE to test final model.
        
** Model Basics
   Use models to partition data into patterns and residuals.
   1. Define a family of models. ( line, quadratic curve)
   2. Generate fitted model from above.
   The fitted model is just the best from the family,not 'true'
   All models are wrong, but some are useful.
   #+begin_src R
     library(tidyverse)
     library(modelr)
     options(na.action=na.warn)
     ggplot(sim1, aes(x,y))+geom_point()
   #+end_src

